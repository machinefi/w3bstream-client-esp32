/* Automatically generated nanopb header */
/* Generated by nanopb-0.4.7 */

#ifndef PB_HEADER_PB_H_INCLUDED
#define PB_HEADER_PB_H_INCLUDED
#include "ProtoBuf/pb.h"

#if PB_PROTO_HEADER_VERSION != 40
#error Regenerate this file with the current version of nanopb generator.
#endif

/* Struct definitions */
typedef struct _Header {
    char event_type[8]; /* event type */
    char pub_id[8]; /* the unique identifier for publisher */
    char token[160]; /* for validation message */
    int64_t pub_time; /* event pub timestamp */
    char event_id[8]; /* event id for tracing */
} Header;


#ifdef __cplusplus
extern "C" {
#endif

/* Initializer values for message structs */
#define Header_init_default                      {"", "", "", 0, ""}
#define Header_init_zero                         {"", "", "", 0, ""}

/* Field tags (for use in manual encoding/decoding) */
#define Header_event_type_tag                    1
#define Header_pub_id_tag                        2
#define Header_token_tag                         3
#define Header_pub_time_tag                      4
#define Header_event_id_tag                      5

/* Struct field encoding specification for nanopb */
#define Header_FIELDLIST(X, a) \
X(a, STATIC,   SINGULAR, STRING,   event_type,        1) \
X(a, STATIC,   SINGULAR, STRING,   pub_id,            2) \
X(a, STATIC,   SINGULAR, STRING,   token,             3) \
X(a, STATIC,   SINGULAR, INT64,    pub_time,          4) \
X(a, STATIC,   SINGULAR, STRING,   event_id,          5)
#define Header_CALLBACK NULL
#define Header_DEFAULT NULL

extern const pb_msgdesc_t Header_msg;

/* Defines for backwards compatibility with code written before nanopb-0.4.0 */
#define Header_fields &Header_msg

/* Maximum encoded size of messages (where known) */
#define Header_size                              200

#ifdef __cplusplus
} /* extern "C" */
#endif

#endif
